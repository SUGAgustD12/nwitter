{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","components/Nweets.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentUrl","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","text","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","console","log","result","currentTarget","readAsDataURL","src","width","height","Nweet","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","toggleEditing","update","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c119529.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">\r\n                    Continue with Google\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\">\r\n                    Continue with Github\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl=\"\";\r\n        if (attachment !== \"\") {\r\n                const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            console.log(finishedEvent);\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n                <input\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                    />\r\n                    <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n                    <input type=\"submit\" value=\"Nweet\" />\r\n                    {attachment && (\r\n                        <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                        </div>\r\n                    )}\r\n            </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\nconst onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n        await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n};\r\n\r\nconst toggleEditing = () => setEditing((prev) => !prev);\r\n\r\nconst onChange = (event) => {\r\n    const {\r\n        target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n};\r\n\r\nconst onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n};\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input onChange={onChange} value={newNweet} required />\r\n                        <input type=\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import NweetFactory from \"components/NweetFactory\";\r\nimport Nweet from \"components/Nweets\";\r\nimport { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                />\r\n                <input type=\"submit\" value=\"Update Profile\" />\r\n            </form>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\">{userObj.displayName}의 profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });      \n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n        ) : (\n          \"initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}