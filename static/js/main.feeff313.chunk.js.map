{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","components/Nweets.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentUrl","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","text","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","id","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","src","backgroundImage","faTimes","Nweet","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","refFromURL","toggleEditing","update","autoFocus","width","height","faTrash","faPencilAlt","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","marginTop","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.feeff313.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    let attachmentUrl = \"\";\r\n\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\nconst onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제하시겠습니까?\");\r\n    if (ok) {\r\n        await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n};\r\n\r\nconst toggleEditing = () => setEditing((prev) => !prev);\r\n\r\nconst onChange = (event) => {\r\n    const {\r\n        target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n};\r\n\r\nconst onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n};\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            required\r\n                            placeholder=\"Edit your nweet\"\r\n                            autoFocus\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Tweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n                    )}\r\n                    {isOwner && (\r\n                        <div className=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import NweetFactory from \"components/NweetFactory\";\r\nimport Nweet from \"components/Nweets\";\r\nimport { dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService\r\n          .collection(\"nweets\")\r\n          .orderBy(\"createdAt\", \"desc\")\r\n          .onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n              id: document.id,\r\n              ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n          });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginBottom: 30}}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({ displayName: newDisplayName });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                      marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginTop: 50\r\n                }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\"\r\n                        style={{\r\n                            marginLeft: 10,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            fontSize: 12,\r\n                        }}\r\n                    >\r\n                        <FontAwesomeIcon icon={faUser} color={\"04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {userObj.displayName\r\n                                ? `${userObj.displayName}의 Profile`\r\n                            : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });      \n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n        ) : (\n          \"initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}